name: example oj-verify

on:
  push:
    branches:
      - main
  workflow_dispatch:
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      hash: ${{ steps.download.outputs.problems-hash }}
    steps:
      - uses: actions/checkout@v3

      - name: oj-resolve
        id: resolve
        uses: competitive-verifier/oj-resolve-action@v1
        with:
          install: true
          cache-pip: true
          include: examples
          exclude: |
            src
            tests
      - name: Download problems
        id: download
        uses: competitive-verifier/download-problems@v1
        with:
          local-verify-files-path: ${{ steps.create-json.outputs.json-path }}
          cache: true

  verify:
    runs-on: ubuntu-latest
    needs: [setup]
    strategy:
      matrix:
        index:
          [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
    steps:
      - uses: actions/checkout@v3

      - name: Restore problems cache
        uses: competitive-verifier/restore-problem-cache@v1
        with:
          hash: ${{ needs.setup.outputs.hash }}

      - uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "11"

      - name: Verify
        uses: competitive-verifier/verify-action@v1
        with:
          install: true
          cache-pip: true
          split-size: 20
          split-index: ${{ matrix.index }}

  docs-and-check:
    runs-on: ubuntu-latest
    needs: [setup, verify]
    steps:
      - uses: actions/checkout@v3

      - name: Docs
        uses: competitive-verifier/docs-action@v1
        with:
          install: true
          cache-pip: true
          destination: _jekyll

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: _jekyll
          destination: _site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: _site

      - name: Check
        uses: competitive-verifier/check-action@v1

  deploy:
    if: (success() || failure()) && github.ref == 'refs/heads/main'
    needs: docs-and-check
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
